(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();class g{constructor(){this.canvas=null,this.ctx=null,this.isDrawing=!1,this.lastX=0,this.lastY=0,this.currentColor="#000000",this.currentSize=5,this.socket=null,this.userId=this.generateUserId(),this.userName=this.generateUserName(),this.users=new Map,this.cursors=new Map,this.isConnected=!1,this.currentStroke=[],this.strokeId=0,this.lastTouchX=0,this.lastTouchY=0,this.points=[],this.smoothing=1,this.minDistance=1.5,this.smoothingBuffer=[],this.taper=.5,this.velocityHistory=[],this.accelerationHistory=[],this.lastTimestamp=0,this.lastVelocity=0,this.brushType="ink-pen",this.isEraser=!1,this.strokeProgress=0,this.totalStrokeDistance=0,this.strokeDistances=[],this.canvasStates=[],this.maxUndoStates=20,this.currentStateIndex=-1,this.zoomLevel=1,this.baseZoom=1,this.minZoom=.1,this.maxZoom=5,this.canvasWidth=1536,this.canvasHeight=1080,this.isMobile=window.innerWidth<=768,this.isMobile&&this.setMobileCanvasDimensions(),this.panX=0,this.panY=0,this.isPanning=!1,this.lastPanX=0,this.lastPanY=0,this.isHandTool=!1}getCanvasCoordinates(t,e){const s=this.canvas.getBoundingClientRect(),i=(t-s.left)/s.width,n=(e-s.top)/s.height,a=i*this.canvasWidth,h=n*this.canvasHeight;return{x:a,y:h}}generateUserId(){return"user_"+Math.random().toString(36).substr(2,9)}generateUserName(){const t=["Creative","Artistic","Colorful","Bold","Bright","Vivid","Dynamic","Elegant"],e=["Artist","Painter","Designer","Creator","Sketcher","Illustrator"];return t[Math.floor(Math.random()*t.length)]+e[Math.floor(Math.random()*e.length)]+Math.floor(Math.random()*100)}setMobileCanvasDimensions(){const t=document.querySelector(".canvas-wrapper");if(!t){console.warn("Canvas wrapper not found for mobile sizing");return}const e=t.getBoundingClientRect(),s=32,i=e.width-s,n=e.height-s;this.canvasWidth=Math.max(i,320),this.canvasHeight=Math.max(n,240),console.log(`Mobile canvas size: ${this.canvasWidth}x${this.canvasHeight}, container: ${e.width}x${e.height}, padding: ${s}px`)}init(){this.setupCanvas(),this.setupUI(),this.setupEventListeners(),this.connectToServer(),this.updateConnectionStatus("connecting","Connecting to server..."),this.updateCursor(),setTimeout(()=>{this.resizeCanvas()},100),this.saveCanvasState()}setupCanvas(){this.canvas=document.getElementById("drawing-canvas"),this.ctx=this.canvas.getContext("2d"),window.addEventListener("resize",()=>this.resizeCanvas()),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight,this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.canvasWidth,this.canvasHeight);const t=window.devicePixelRatio||1;t>1&&(this.canvas.style.width=this.canvas.width+"px",this.canvas.style.height=this.canvas.height+"px",this.canvas.width*=t,this.canvas.height*=t,this.ctx.scale(t,t))}resizeCanvas(){const t=this.isMobile;this.isMobile=window.innerWidth<=768,this.isMobile&&(!t||this.isMobile)?this.setMobileCanvasDimensions():!this.isMobile&&t&&(this.canvasWidth=1536,this.canvasHeight=1080);const e=document.querySelector(".canvas-wrapper");if(!e){console.error("Canvas wrapper not found");return}const s=e.getBoundingClientRect();if(s.width===0||s.height===0){console.log("Container not ready, retrying..."),setTimeout(()=>this.resizeCanvas(),50);return}const i=32,n=s.width-i,a=s.height-i;if(this.isMobile)this.displayWidth=this.canvasWidth,this.displayHeight=this.canvasHeight;else{const d=n/this.canvasWidth,p=a/this.canvasHeight,u=Math.min(d,p,1);this.displayWidth=this.canvasWidth*u,this.displayHeight=this.canvasHeight*u}this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight,this.canvas.style.width=this.displayWidth+"px",this.canvas.style.height=this.displayHeight+"px";const h=document.getElementById("cursors-layer");h&&(h.style.width=this.displayWidth+"px",h.style.height=this.displayHeight+"px");const o=s.width,r=s.height,c=o/this.canvasWidth,l=r/this.canvasHeight;this.baseZoom=Math.min(c,l),this.baseZoom=Math.max(this.baseZoom,.1),this.zoomLevel=this.baseZoom,this.panX=0,this.panY=0,this.updateCanvasTransform(),this.updateZoomDisplay(),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.canvasWidth,this.canvasHeight)}setupUI(){document.getElementById("taper-group").style.display="flex";const t=document.getElementById("brush-size"),e=document.getElementById("brush-size-display");t.addEventListener("input",l=>{this.currentSize=parseInt(l.target.value),e.textContent=`${this.currentSize}px`,this.updateCursor()});const s=document.getElementById("ink-pen"),i=document.getElementById("eraser-brush");s.addEventListener("click",()=>{this.brushType="ink-pen",this.isEraser=!1,this.isHandTool=!1,s.classList.add("active"),i.classList.remove("active"),document.getElementById("hand-tool").classList.remove("active"),document.getElementById("taper-group").style.display="flex",document.getElementById("brush-size-group").style.display="flex",this.updateCursor(),console.log("�️ Brush type changed to: Ink Pen")}),i.addEventListener("click",()=>{this.isEraser=!0,this.isHandTool=!1,i.classList.add("active"),s.classList.remove("active"),document.getElementById("hand-tool").classList.remove("active"),document.getElementById("taper-group").style.display="none",document.getElementById("brush-size-group").style.display="flex",this.updateCursor(),console.log("🧽 Eraser mode activated")});const n=document.getElementById("taper"),a=document.getElementById("taper-display");n.addEventListener("input",l=>{this.taper=parseInt(l.target.value)/100,a.textContent=`${l.target.value}%`}),document.getElementById("color-picker").addEventListener("change",l=>{this.currentColor=l.target.value}),document.getElementById("clear-canvas").addEventListener("click",()=>{this.clearCanvas()}),document.getElementById("save-canvas").addEventListener("click",()=>{this.saveCanvas()}),document.getElementById("undo-btn").addEventListener("click",()=>{this.undo()});const o=document.getElementById("hand-tool");o&&o.addEventListener("click",()=>{this.isHandTool=!this.isHandTool,this.isHandTool?(o.classList.add("active"),document.getElementById("ink-pen").classList.remove("active"),document.getElementById("eraser-brush").classList.remove("active"),this.isEraser=!1,document.getElementById("taper-group").style.display="none",document.getElementById("brush-size-group").style.display="none",this.canvas.style.cursor="grab",console.log("🤚 Hand tool activated")):(o.classList.remove("active"),document.getElementById("ink-pen").classList.add("active"),this.brushType="ink-pen",document.getElementById("taper-group").style.display="flex",document.getElementById("brush-size-group").style.display="flex",this.updateCursor(),console.log("�️ Drawing mode restored"))});const r=document.getElementById("zoom-in"),c=document.getElementById("zoom-out");r&&r.addEventListener("click",()=>{this.zoomIn()}),c&&c.addEventListener("click",()=>{this.zoomOut()})}setupEventListeners(){this.canvas.addEventListener("mousedown",t=>{this.isHandTool?this.startPan(t):this.startDrawing(t)}),this.canvas.addEventListener("mousemove",t=>{this.isHandTool&&this.isPanning?this.updatePan(t):this.isHandTool||this.draw(t)}),this.canvas.addEventListener("mouseup",()=>{this.isHandTool?this.stopPan():this.stopDrawing()}),this.canvas.addEventListener("mouseout",()=>{this.isHandTool?this.stopPan():this.stopDrawing()}),this.canvas.addEventListener("touchstart",t=>{this.isHandTool?this.handleTouchStartPan(t):this.handleTouchStart(t)},{passive:!1}),this.canvas.addEventListener("touchmove",t=>{this.isHandTool&&this.isPanning?this.handleTouchMovePan(t):this.isHandTool||this.handleTouchMove(t)},{passive:!1}),this.canvas.addEventListener("touchend",()=>{this.isHandTool?this.stopPan():this.stopDrawing()},{passive:!1}),this.canvas.addEventListener("mousemove",t=>{this.isDrawing||this.sendCursorPosition(t)})}connectToServer(){setTimeout(()=>{this.isConnected=!0,this.updateConnectionStatus("connected","Connected to server"),this.updateUserCount(1),this.addUser(this.userId,this.userName,this.currentColor)},1e3)}getRandomColor(){const t=["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8","#F7DC6F"];return t[Math.floor(Math.random()*t.length)]}startDrawing(t){this.isDrawing=!0;const e=this.getCanvasCoordinates(t.clientX,t.clientY);this.lastX=e.x,this.lastY=e.y,this.points=[{x:this.lastX,y:this.lastY,timestamp:Date.now(),velocity:0,acceleration:0,distance:0}],this.velocityHistory=[0],this.accelerationHistory=[0],this.lastTimestamp=Date.now(),this.lastVelocity=0,this.currentStroke=[{x:this.lastX,y:this.lastY,color:this.currentColor,size:this.currentSize}],this.strokeId++}draw(t){if(!this.isDrawing)return;const e=this.getCanvasCoordinates(t.clientX,t.clientY),s=e.x,i=e.y,n=Date.now(),a=Math.sqrt(Math.pow(s-this.lastX,2)+Math.pow(i-this.lastY,2)),h=n-this.lastTimestamp,o=h>0?a/h:0,r=Math.max(this.minDistance*.5,Math.min(this.minDistance*2,this.minDistance*(1+o*.3)));if(a<r)return;const c=Math.abs(o-this.lastVelocity)/Math.max(h,1);this.velocityHistory.push(o),this.accelerationHistory.push(c),this.velocityHistory.length>8&&(this.velocityHistory.shift(),this.accelerationHistory.shift()),this.points.push({x:s,y:i,timestamp:n,velocity:o,acceleration:c}),this.points.length>12&&this.points.shift(),this.drawSmoothLine(s,i),this.currentStroke.push({x:s,y:i,color:this.currentColor,size:this.currentSize}),this.sendDrawingData({type:"draw",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.lastX=s,this.lastY=i,this.lastTimestamp=n,this.lastVelocity=o}drawSmoothLine(t,e){if(this.points.length<4){const v=this.calculateTaperedSize(this.currentSize);this.drawLine(this.lastX,this.lastY,t,e,this.currentColor,v);return}const s=this.points.length,i=s>=6?this.points[s-6]:this.points[0],n=s>=5?this.points[s-5]:this.points[0],a=this.points[s-4],h=this.points[s-3],o=this.points[s-2],r=this.points[s-1],c=this.applyMultiPointSmoothing([i,n,a,h,o]),l=this.applyMultiPointSmoothing([n,a,h,o,r]),d=this.calculateAdaptiveControlPoint(c[1],c[2],c[3],!0),p=this.calculateAdaptiveControlPoint(l[1],l[2],l[3],!1),u=this.calculateTaperedSize(this.currentSize);this.drawAdvancedTaperedBezier(c[2],d,p,l[2],u)}applyMultiPointSmoothing(t){if(t.length<3)return t;const e=[];e.push(t[0]);for(let s=1;s<t.length-1;s++){const i=t[s-1],n=t[s],a=t[s+1],h={x:i.x*.2+n.x*.6+a.x*.2,y:i.y*.2+n.y*.6+a.y*.2,timestamp:n.timestamp};e.push(h)}return e.push(t[t.length-1]),e}calculateAdaptiveControlPoint(t,e,s,i){const n=this.smoothing*.25,a=e.x-t.x,h=e.y-t.y,o=s.x-e.x,r=s.y-e.y,d=Math.abs(Math.atan2(h,a)-Math.atan2(r,o))>Math.PI/3?n*.5:n;return i?{x:e.x+(s.x-t.x)*d,y:e.y+(s.y-t.y)*d}:{x:e.x-(s.x-t.x)*d,y:e.y-(s.y-t.y)*d}}drawAdvancedTaperedBezier(t,e,s,i,n){this.ctx.globalCompositeOperation=this.isEraser?"destination-out":"source-over",this.ctx.strokeStyle=this.currentColor,this.ctx.lineWidth=n,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",n<2?this.ctx.globalAlpha=.8+n/2*.2:this.ctx.globalAlpha=1,this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.bezierCurveTo(e.x,e.y,s.x,s.y,i.x,i.y),this.ctx.stroke(),this.ctx.globalAlpha=1}calculateTaperedSize(t){if(this.isEraser||this.taper===0||this.velocityHistory.length===0)return t;let e=0,s=0;for(let o=0;o<this.velocityHistory.length;o++){const r=o+1;e+=this.velocityHistory[o]*r,s+=r}const i=e/s,a=Math.min(i/2.5,1),h=a*a*(3-2*a);if(this.brushType==="ink-pen")if(this.taper>=0){const o=1-h*this.taper*.75,r=t*.25;return Math.max(t*o,r)}else{const o=Math.abs(this.taper),r=t*1.75,c=t*.25,l=t*(.25+h*1.5),d=t+(l-t)*o;return Math.max(Math.min(d,r),c)}return t}drawTaperedBezier(t,e,s,i,n){this.ctx.globalCompositeOperation=this.isEraser?"destination-out":"source-over",this.ctx.strokeStyle=this.currentColor,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.lineWidth=n,this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.bezierCurveTo(e.x,e.y,s.x,s.y,i.x,i.y),this.ctx.stroke()}averagePoint(t,e,s){return{x:(t.x+e.x+s.x)/3,y:(t.y+e.y+s.y)/3}}calculateControlPoint(t,e,s,i){const n=this.smoothing*.2;return i?{x:e.x+(s.x-t.x)*n,y:e.y+(s.y-t.y)*n}:{x:e.x-(s.x-t.x)*n,y:e.y-(s.y-t.y)*n}}stopDrawing(){this.isDrawing&&(this.isDrawing=!1,this.currentStroke.length>0&&this.sendDrawingData({type:"strokeComplete",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.currentStroke=[],this.saveCanvasState())}handleTouchStart(t){t.preventDefault();const e=t.touches[0];this.isDrawing=!0;const s=this.getCanvasCoordinates(e.clientX,e.clientY);this.lastTouchX=s.x,this.lastTouchY=s.y,this.lastX=this.lastTouchX,this.lastY=this.lastTouchY,this.points=[{x:this.lastX,y:this.lastY,timestamp:Date.now(),velocity:0,acceleration:0}],this.velocityHistory=[0],this.accelerationHistory=[0],this.lastTimestamp=Date.now(),this.lastVelocity=0,this.currentStroke=[{x:this.lastX,y:this.lastY,color:this.currentColor,size:this.currentSize}],this.strokeId++}handleTouchMove(t){if(t.preventDefault(),!this.isDrawing)return;const e=t.touches[0],s=this.getCanvasCoordinates(e.clientX,e.clientY),i=s.x,n=s.y,a=Date.now(),h=Math.sqrt(Math.pow(i-this.lastX,2)+Math.pow(n-this.lastY,2)),o=a-this.lastTimestamp,r=o>0?h/o:0,c=Math.max(this.minDistance*.3,Math.min(this.minDistance*1.5,this.minDistance*(1+r*.2)));if(h<c)return;const l=Math.abs(r-this.lastVelocity)/Math.max(o,1);this.velocityHistory.push(r),this.accelerationHistory.push(l),this.velocityHistory.length>8&&(this.velocityHistory.shift(),this.accelerationHistory.shift()),this.points.push({x:i,y:n,timestamp:a,velocity:r,acceleration:l}),this.points.length>12&&this.points.shift(),this.drawSmoothLine(i,n),this.currentStroke.push({x:i,y:n,color:this.currentColor,size:this.currentSize}),this.sendDrawingData({type:"draw",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.lastX=i,this.lastY=n,this.lastTimestamp=a,this.lastVelocity=r}drawLine(t,e,s,i,n,a){this.ctx.globalCompositeOperation=this.isEraser?"destination-out":"source-over",this.ctx.strokeStyle=n,this.ctx.lineWidth=a,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.beginPath(),this.ctx.moveTo(t,e),this.ctx.lineTo(s,i),this.ctx.stroke()}sendDrawingData(t){console.log("Drawing data:",t)}updateCursor(){const t=Math.min(Math.max(this.currentSize,4),100),e=Math.max(t*2,20),s=e/2;let i;this.isEraser?i=`
                <svg width="${e}" height="${e}" xmlns="http://www.w3.org/2000/svg">
                    <rect x="2" y="2" width="${e-4}" height="${e-4}" 
                          fill="none" stroke="#666" stroke-width="2" stroke-dasharray="4,2" opacity="0.8"/>
                    <rect x="1" y="1" width="${e-2}" height="${e-2}" 
                          fill="none" stroke="#fff" stroke-width="1" stroke-dasharray="4,2" opacity="0.6"/>
                </svg>
            `:i=`
                <svg width="${e}" height="${e}" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="${s}" cy="${s}" r="${t}" fill="none" stroke="#666" stroke-width="2" opacity="0.8"/>
                    <circle cx="${s}" cy="${s}" r="${t}" fill="none" stroke="#fff" stroke-width="1" opacity="0.6"/>
                    <line x1="${s}" y1="0" x2="${s}" y2="${e}" stroke="#666" stroke-width="1" opacity="0.6"/>
                    <line x1="0" y1="${s}" x2="${e}" y2="${s}" stroke="#666" stroke-width="1" opacity="0.6"/>
                    <circle cx="${s}" cy="${s}" r="2" fill="#666" opacity="0.8"/>
                </svg>
            `;const n=new Blob([i],{type:"image/svg+xml"}),a=URL.createObjectURL(n);this.canvas.style.cursor=`url(${a}) ${s} ${s}, crosshair`,setTimeout(()=>URL.revokeObjectURL(a),1e3)}sendCursorPosition(t){const e=this.getCanvasCoordinates(t.clientX,t.clientY);e.x,e.y}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.canvasWidth,this.canvasHeight),this.sendDrawingData({type:"clear",userId:this.userId}),this.saveCanvasState()}saveCanvas(){const t=document.createElement("a");t.download=`my-digital-ink-pen-${Date.now()}.png`,t.href=this.canvas.toDataURL(),t.click()}updateConnectionStatus(t,e){const s=document.getElementById("status-indicator"),i=document.getElementById("status-text");s.className=`status-indicator ${t}`,i.textContent=e}updateUserCount(t){document.getElementById("user-count").textContent=`${t} user${t!==1?"s":""} online`}addUser(t,e,s){this.users.set(t,{name:e,color:s}),this.updateUsersList(),this.updateUserCount(this.users.size)}removeUser(t){this.users.delete(t),this.removeCursor(t),this.updateUsersList(),this.updateUserCount(this.users.size)}updateUsersList(){const t=document.getElementById("users-list");t.innerHTML="",this.users.forEach((e,s)=>{const i=document.createElement("div");i.className="user-item",i.innerHTML=`
                <div class="user-color" style="background-color: ${e.color}"></div>
                <span>${e.name}</span>
            `,t.appendChild(i)})}showCursor(t,e,s){if(!this.users.has(t))return;const i=this.users.get(t);let n=this.cursors.get(t);n||(n=document.createElement("div"),n.className="user-cursor",n.setAttribute("data-username",i.name),n.style.borderColor=i.color,n.style.backgroundColor=i.color+"40",document.getElementById("cursors-layer").appendChild(n),this.cursors.set(t,n)),n.style.left=e+"px",n.style.top=s+"px",n.style.display="block"}removeCursor(t){const e=this.cursors.get(t);e&&(e.remove(),this.cursors.delete(t))}saveCanvasState(){this.canvasStates=this.canvasStates.slice(0,this.currentStateIndex+1);const t=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);this.canvasStates.push(t),this.currentStateIndex++,this.canvasStates.length>this.maxUndoStates&&(this.canvasStates.shift(),this.currentStateIndex--),this.updateUndoButtonState()}undo(){if(this.currentStateIndex>0){this.currentStateIndex--;const t=this.canvasStates[this.currentStateIndex];this.ctx.putImageData(t,0,0),this.updateUndoButtonState()}}updateUndoButtonState(){const t=document.getElementById("undo-btn");t&&(t.disabled=this.currentStateIndex<=0,t.style.opacity=this.currentStateIndex<=0?"0.5":"1")}startPan(t){this.isPanning=!0,this.lastPanX=t.clientX,this.lastPanY=t.clientY,this.canvas.style.cursor="grabbing"}updatePan(t){if(!this.isPanning)return;const e=t.clientX-this.lastPanX,s=t.clientY-this.lastPanY;this.panX+=e/this.zoomLevel,this.panY+=s/this.zoomLevel,this.lastPanX=t.clientX,this.lastPanY=t.clientY,this.updateCanvasTransform()}stopPan(){this.isPanning=!1,this.isHandTool&&(this.canvas.style.cursor="grab")}handleTouchStartPan(t){t.preventDefault();const e=t.touches[0];this.isPanning=!0,this.lastPanX=e.clientX,this.lastPanY=e.clientY}handleTouchMovePan(t){if(t.preventDefault(),!this.isPanning)return;const e=t.touches[0],s=e.clientX-this.lastPanX,i=e.clientY-this.lastPanY;this.panX+=s/this.zoomLevel,this.panY+=i/this.zoomLevel,this.lastPanX=e.clientX,this.lastPanY=e.clientY,this.updateCanvasTransform()}zoomIn(){const t=Math.min(this.zoomLevel*1.2,this.maxZoom);this.setZoom(t)}zoomOut(){const t=Math.max(this.zoomLevel/1.2,this.minZoom);this.setZoom(t)}setZoom(t){this.zoomLevel=t,this.updateCanvasTransform(),this.updateZoomDisplay()}updateZoomDisplay(){const t=document.getElementById("zoom-display");if(t){const e=Math.round(this.zoomLevel/this.baseZoom*100);t.textContent=`${e}%`}}updateCanvasTransform(){const t=this.canvasWidth*this.zoomLevel,e=this.canvasHeight*this.zoomLevel;this.canvas.style.width=t+"px",this.canvas.style.height=e+"px",this.canvas.style.transform=`translate(${this.panX*this.zoomLevel}px, ${this.panY*this.zoomLevel}px)`,this.canvas.style.position="absolute",this.canvas.style.top="50%",this.canvas.style.left="50%",this.canvas.style.marginTop=-e/2+"px",this.canvas.style.marginLeft=-t/2+"px",this.canvas.style.border="2px solid rgba(255, 255, 255, 0.3)",this.canvas.style.boxShadow="0 0 20px rgba(0, 0, 0, 0.5)"}}class y{constructor(){this.activeSlider=null,this.sliderJustOpened=!1,this.usersPanelOpen=!1,this.sliderData={"brush-size":{min:1,max:50,value:5,unit:"px",group:"brush-size-group"},taper:{min:0,max:100,value:50,unit:"%",group:"taper-group"}},this.init()}init(){this.setupSliderButtons(),this.setupMobileSliders(),this.setupUsersPanel(),this.setupDocumentClick()}setupSliderButtons(){document.querySelectorAll(".tool-group.slider-group").forEach(e=>{e.addEventListener("click",s=>{if(window.innerWidth<=768){s.preventDefault(),s.stopPropagation(),this.sliderJustOpened=!0;const i=e.id;let n=null;i==="brush-size-group"&&(n="brush-size"),i==="taper-group"&&(n="taper"),n&&this.toggleMobileSlider(n)}})})}setupMobileSliders(){Object.keys(this.sliderData).forEach(t=>{this.sliderData[t];const e=document.getElementById(`${t}-mobile-slider`);if(!e)return;const s=e.querySelector(".mobile-slider-track"),i=e.querySelector(".mobile-slider-thumb");if(!s||!i)return;let n=!1;const a=r=>{r.stopPropagation(),n=!0,this.updateSliderFromEvent(r,t,s)},h=r=>{n&&(r.preventDefault(),r.stopPropagation(),this.updateSliderFromEvent(r,t,s))},o=()=>{n=!1};i.addEventListener("touchstart",a,{passive:!1}),s.addEventListener("touchstart",a,{passive:!1}),document.addEventListener("touchmove",h,{passive:!1}),document.addEventListener("touchend",o,{passive:!0}),i.addEventListener("mousedown",a,{passive:!0}),s.addEventListener("mousedown",a,{passive:!0}),document.addEventListener("mousemove",h,{passive:!0}),document.addEventListener("mouseup",o,{passive:!0})})}setupUsersPanel(){const t=document.getElementById("user-count");t&&t.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),this.toggleUsersPanel()})}setupDocumentClick(){document.addEventListener("click",t=>{if(window.innerWidth<=768&&this.activeSlider&&!this.sliderJustOpened){const e=document.getElementById(this.sliderData[this.activeSlider].group),s=document.getElementById(`${this.activeSlider}-mobile-slider`);e&&s&&!e.contains(t.target)&&!s.contains(t.target)&&this.closeMobileSlider()}if(this.usersPanelOpen){const e=document.getElementById("users-panel"),s=document.getElementById("user-count");e&&s&&!e.contains(t.target)&&!s.contains(t.target)&&this.closeUsersPanel()}},!0),document.addEventListener("touchstart",t=>{if(window.innerWidth<=768&&this.activeSlider&&!this.sliderJustOpened){const e=document.getElementById(this.sliderData[this.activeSlider].group),s=document.getElementById(`${this.activeSlider}-mobile-slider`);e&&s&&!e.contains(t.target)&&!s.contains(t.target)&&this.closeMobileSlider()}if(this.usersPanelOpen){const e=document.getElementById("users-panel"),s=document.getElementById("user-count");e&&s&&!e.contains(t.target)&&!s.contains(t.target)&&this.closeUsersPanel()}},!0)}toggleMobileSlider(t){this.activeSlider===t?this.closeMobileSlider():this.openMobileSlider(t)}openMobileSlider(t){this.closeMobileSlider(),this.activeSlider=t;const e=this.sliderData[t],s=document.getElementById(`${t}-mobile-slider`),i=s.querySelector(".mobile-slider-value");i.textContent=`${e.value}${e.unit}`,this.updateThumbPosition(t,e.value,e.min,e.max),s.classList.add("active"),setTimeout(()=>{this.sliderJustOpened=!1},100)}closeMobileSlider(){this.activeSlider&&(document.getElementById(`${this.activeSlider}-mobile-slider`).classList.remove("active"),this.activeSlider=null)}updateSliderFromEvent(t,e,s){const i=s.getBoundingClientRect(),a=(t.touches?t.touches[0].clientY:t.clientY)-i.top,h=Math.max(0,Math.min(1,1-a/i.height)),o=this.sliderData[e],r=Math.round(o.min+h*(o.max-o.min));o.value=r,this.updateThumbPosition(e,r,o.min,o.max),this.updateValueDisplays(e,r,o.unit);const c=document.getElementById(e);c&&(c.value=r,c.dispatchEvent(new Event("input",{bubbles:!0})))}updateThumbPosition(t,e,s,i){const n=document.getElementById(`${t}-mobile-slider`),a=n.querySelector(".mobile-slider-thumb");n.querySelector(".mobile-slider-track");const h=(e-s)/(i-s),o=120,r=24,c=(1-h)*(o-r);a.style.top=`${Math.max(0,Math.min(o-r,c))}px`}updateValueDisplays(t,e,s){const n=document.getElementById(`${t}-mobile-slider`).querySelector(".mobile-slider-value");n.textContent=`${e}${s}`;const a=document.getElementById(`${t}-display`);a&&(a.textContent=`${e}${s}`)}toggleUsersPanel(){this.usersPanelOpen?this.closeUsersPanel():this.openUsersPanel()}openUsersPanel(){const t=document.getElementById("users-panel");t&&(this.usersPanelOpen=!0,t.classList.add("active"))}closeUsersPanel(){const t=document.getElementById("users-panel");t&&(this.usersPanelOpen=!1,t.classList.remove("active"))}}document.addEventListener("DOMContentLoaded",()=>{requestAnimationFrame(()=>{new g().init(),requestAnimationFrame(()=>{new y})})});
