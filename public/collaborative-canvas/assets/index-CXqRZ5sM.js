(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(e){if(e.ep)return;e.ep=!0;const i=s(e);fetch(e.href,i)}})();class h{constructor(){this.canvas=null,this.ctx=null,this.isDrawing=!1,this.lastX=0,this.lastY=0,this.currentColor="#000000",this.currentSize=5,this.socket=null,this.userId=this.generateUserId(),this.userName=this.generateUserName(),this.users=new Map,this.cursors=new Map,this.isConnected=!1,this.currentStroke=[],this.strokeId=0,this.lastTouchX=0,this.lastTouchY=0,this.points=[],this.smoothing=.5,this.minDistance=3}generateUserId(){return"user_"+Math.random().toString(36).substr(2,9)}generateUserName(){const t=["Creative","Artistic","Colorful","Bold","Bright","Vivid","Dynamic","Elegant"],s=["Artist","Painter","Designer","Creator","Sketcher","Illustrator"];return t[Math.floor(Math.random()*t.length)]+s[Math.floor(Math.random()*s.length)]+Math.floor(Math.random()*100)}init(){this.setupCanvas(),this.setupUI(),this.setupEventListeners(),this.connectToServer(),this.updateConnectionStatus("connecting","Connecting to server...")}setupCanvas(){this.canvas=document.getElementById("drawing-canvas"),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"}resizeCanvas(){const s=this.canvas.parentElement.getBoundingClientRect();this.canvas.width=s.width,this.canvas.height=s.height,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"}setupUI(){const t=document.getElementById("brush-size"),s=document.getElementById("brush-size-display");t.addEventListener("input",r=>{this.currentSize=parseInt(r.target.value),s.textContent=`${this.currentSize}px`});const n=document.getElementById("smoothness"),e=document.getElementById("smoothness-display");n.addEventListener("input",r=>{this.smoothing=parseInt(r.target.value)/100,e.textContent=`${r.target.value}%`}),document.getElementById("color-picker").addEventListener("change",r=>{this.currentColor=r.target.value}),document.getElementById("clear-canvas").addEventListener("click",()=>{this.clearCanvas()}),document.getElementById("save-canvas").addEventListener("click",()=>{this.saveCanvas()})}setupEventListeners(){this.canvas.addEventListener("mousedown",t=>this.startDrawing(t)),this.canvas.addEventListener("mousemove",t=>this.draw(t)),this.canvas.addEventListener("mouseup",()=>this.stopDrawing()),this.canvas.addEventListener("mouseout",()=>this.stopDrawing()),this.canvas.addEventListener("touchstart",t=>this.handleTouchStart(t),{passive:!1}),this.canvas.addEventListener("touchmove",t=>this.handleTouchMove(t),{passive:!1}),this.canvas.addEventListener("touchend",()=>this.stopDrawing(),{passive:!1}),this.canvas.addEventListener("mousemove",t=>{this.isDrawing||this.sendCursorPosition(t)})}connectToServer(){setTimeout(()=>{this.isConnected=!0,this.updateConnectionStatus("connected","Connected to server"),this.updateUserCount(1),this.addUser(this.userId,this.userName,this.currentColor)},1e3)}getRandomColor(){const t=["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8","#F7DC6F"];return t[Math.floor(Math.random()*t.length)]}startDrawing(t){this.isDrawing=!0;const s=this.canvas.getBoundingClientRect();this.lastX=t.clientX-s.left,this.lastY=t.clientY-s.top,this.points=[{x:this.lastX,y:this.lastY}],this.currentStroke=[{x:this.lastX,y:this.lastY,color:this.currentColor,size:this.currentSize}],this.strokeId++}draw(t){if(!this.isDrawing)return;const s=this.canvas.getBoundingClientRect(),n=t.clientX-s.left,e=t.clientY-s.top;Math.sqrt(Math.pow(n-this.lastX,2)+Math.pow(e-this.lastY,2))<this.minDistance||(this.points.push({x:n,y:e}),this.drawSmoothLine(n,e),this.currentStroke.push({x:n,y:e,color:this.currentColor,size:this.currentSize}),this.sendDrawingData({type:"draw",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.lastX=n,this.lastY=e)}drawSmoothLine(t,s){if(this.points.length<3){this.drawLine(this.lastX,this.lastY,t,s,this.currentColor,this.currentSize);return}const n=this.points.length,e=this.points[n-3],i=this.points[n-2],r=this.points[n-1],a=i.x+(r.x-e.x)*this.smoothing,c=i.y+(r.y-e.y)*this.smoothing;this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=this.currentColor,this.ctx.lineWidth=this.currentSize,this.ctx.beginPath(),this.ctx.moveTo(e.x,e.y),this.ctx.quadraticCurveTo(a,c,i.x,i.y),this.ctx.stroke()}stopDrawing(){this.isDrawing&&(this.isDrawing=!1,this.currentStroke.length>0&&this.sendDrawingData({type:"strokeComplete",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.currentStroke=[])}handleTouchStart(t){t.preventDefault();const s=t.touches[0],n=this.canvas.getBoundingClientRect();this.isDrawing=!0,this.lastTouchX=s.clientX-n.left,this.lastTouchY=s.clientY-n.top,this.lastX=this.lastTouchX,this.lastY=this.lastTouchY,this.points=[{x:this.lastX,y:this.lastY}],this.currentStroke=[{x:this.lastX,y:this.lastY,color:this.currentColor,size:this.currentSize}],this.strokeId++}handleTouchMove(t){if(t.preventDefault(),!this.isDrawing)return;const s=t.touches[0],n=this.canvas.getBoundingClientRect(),e=s.clientX-n.left,i=s.clientY-n.top;Math.sqrt(Math.pow(e-this.lastX,2)+Math.pow(i-this.lastY,2))<this.minDistance||(this.points.push({x:e,y:i}),this.drawSmoothLine(e,i),this.currentStroke.push({x:e,y:i,color:this.currentColor,size:this.currentSize}),this.sendDrawingData({type:"draw",strokeId:this.strokeId,points:this.currentStroke,userId:this.userId}),this.lastX=e,this.lastY=i)}drawLine(t,s,n,e,i,r){this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=i,this.ctx.lineWidth=r,this.ctx.beginPath(),this.ctx.moveTo(t,s),this.ctx.lineTo(n,e),this.ctx.stroke()}sendDrawingData(t){console.log("Drawing data:",t)}sendCursorPosition(t){const s=this.canvas.getBoundingClientRect();t.clientX-s.left,t.clientY-s.top}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.sendDrawingData({type:"clear",userId:this.userId})}saveCanvas(){const t=document.createElement("a");t.download=`collaborative-canvas-${Date.now()}.png`,t.href=this.canvas.toDataURL(),t.click()}updateConnectionStatus(t,s){const n=document.getElementById("status-indicator"),e=document.getElementById("status-text");n.className=`status-indicator ${t}`,e.textContent=s}updateUserCount(t){document.getElementById("user-count").textContent=`${t} user${t!==1?"s":""} online`}addUser(t,s,n){this.users.set(t,{name:s,color:n}),this.updateUsersList(),this.updateUserCount(this.users.size)}removeUser(t){this.users.delete(t),this.removeCursor(t),this.updateUsersList(),this.updateUserCount(this.users.size)}updateUsersList(){const t=document.getElementById("users-list");t.innerHTML="",this.users.forEach((s,n)=>{const e=document.createElement("div");e.className="user-item",e.innerHTML=`
                <div class="user-color" style="background-color: ${s.color}"></div>
                <span>${s.name}</span>
            `,t.appendChild(e)})}showCursor(t,s,n){if(!this.users.has(t))return;const e=this.users.get(t);let i=this.cursors.get(t);i||(i=document.createElement("div"),i.className="user-cursor",i.setAttribute("data-username",e.name),i.style.borderColor=e.color,i.style.backgroundColor=e.color+"40",document.getElementById("cursors-layer").appendChild(i),this.cursors.set(t,i)),i.style.left=s+"px",i.style.top=n+"px",i.style.display="block"}removeCursor(t){const s=this.cursors.get(t);s&&(s.remove(),this.cursors.delete(t))}}document.addEventListener("DOMContentLoaded",()=>{new h().init()});
